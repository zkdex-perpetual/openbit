/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Storage } from "./Storage";

export class StorageFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Storage> {
    return super.deploy(overrides || {}) as Promise<Storage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Storage {
    return super.attach(address) as Storage;
  }
  connect(signer: Signer): StorageFactory {
    return super.connect(signer) as StorageFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Storage {
    return new Contract(address, _abi, signerOrProvider) as Storage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "authFacts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exodusMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "firstPriorityRequestId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "pendingWithdrawTotal",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "storedBlockHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBlocksCommitted",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBlocksExecuted",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBlocksProven",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalOpenPriorityRequests",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610316806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638ae20dc9116100665780638ae20dc9146101005780639ba0d14614610120578063c57b22be14610133578063f22354871461013b578063faf4d8cb1461014357610093565b8063264c091214610098578063647b5923146100b657806367708dae146100cb5780636e67c7c8146100e0575b600080fd5b6100a061014b565b6040516100ad9190610292565b60405180910390f35b6100be610154565b6040516100ad91906102ba565b6100d3610160565b6040516100ad91906102cb565b6100f36100ee36600461024f565b610170565b6040516100ad91906102a6565b61011361010e366004610210565b61018b565b6040516100ad919061029d565b61011361012e366004610278565b6101a8565b6100d36101ba565b6100be6101d1565b6100be6101e4565b600a5460ff1681565b600f5463ffffffff1681565b600d5467ffffffffffffffff1681565b6005602052600090815260409020546001600160801b031681565b600b60209081526000928352604080842090915290825290205481565b600e6020526000908152604090205481565b600d54600160401b900467ffffffffffffffff1681565b600754600160401b900463ffffffff1681565b600754600160601b900463ffffffff1681565b803563ffffffff8116811461020b57600080fd5b919050565b60008060408385031215610222578182fd5b82356001600160a01b0381168114610238578283fd5b9150610246602084016101f7565b90509250929050565b600060208284031215610260578081fd5b813561ffff81168114610271578182fd5b9392505050565b600060208284031215610289578081fd5b610271826101f7565b901515815260200190565b90815260200190565b6001600160801b0391909116815260200190565b63ffffffff91909116815260200190565b67ffffffffffffffff9190911681526020019056fea2646970667358221220e2d4545f5743fa8271c456ec5f6b91c48e32ade1f4c2bd1b60dff728a6a8f75a64736f6c63430007060033";
