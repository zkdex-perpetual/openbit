/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BytesLike } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Proxy } from "./Proxy";

export class ProxyFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    target: string,
    targetInitializationParameters: BytesLike,
    overrides?: Overrides
  ): Promise<Proxy> {
    return super.deploy(
      target,
      targetInitializationParameters,
      overrides || {}
    ) as Promise<Proxy>;
  }
  getDeployTransaction(
    target: string,
    targetInitializationParameters: BytesLike,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      target,
      targetInitializationParameters,
      overrides || {}
    );
  }
  attach(address: string): Proxy {
    return super.attach(address) as Proxy;
  }
  connect(signer: Signer): ProxyFactory {
    return super.connect(signer) as ProxyFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Proxy {
    return new Contract(address, _abi, signerOrProvider) as Proxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetInitializationParameters",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getMaster",
    outputs: [
      {
        internalType: "address",
        name: "master",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNoticePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTarget",
    outputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "isReadyForUpgrade",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newMaster",
        type: "address",
      },
    ],
    name: "transferMastership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradeCanceled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradeFinishes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradeNoticePeriodStarted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradePreparationStarted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTarget",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "newTargetUpgradeParameters",
        type: "bytes",
      },
    ],
    name: "upgradeTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200109938038062001099833981810160405260408110156200003757600080fd5b8151602083018051604051929492938301929190846401000000008211156200005f57600080fd5b9083019060208201858111156200007557600080fd5b82516401000000008111828201881017156200009057600080fd5b82525081516020918201929091019080838360005b83811015620000bf578181015183820152602001620000a5565b50505050905090810190601f168015620000ed5780820380516001836020036101000a031916815260200191505b50604052505050336200010681620002a460201b60201c565b506200011282620002c8565b60006200011e620002db565b6001600160a01b0316826040516024018080602001828103825283818151815260200191508051906020019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b031663439fab9160e01b178152905182519295509350839250908083835b60208310620001f55780518252601f199092019160209182019101620001d4565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811462000257576040519150601f19603f3d011682016040523d82523d6000602084013e6200025c565b606091505b50509050806200029b576040805162461bcd60e51b815260206004820152600560248201526475696e313160d81b604482015290519081900360640190fd5b505050620002ef565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b6000805160206200107983398151915255565b600080516020620010798339815191525490565b610d7a80620002ff6000396000f3fe6080604052600436106100ab5760003560e01c806378b91e701161006457806378b91e70146102b6578063871b8ff1146102cb5780638773334c146102e0578063b269b9ae14610309578063c3f596871461031e578063f00e6a2a14610351576100ba565b806325394645146100c25780632a3174f41461013f5780633b154b7314610166578063439fab911461017b5780635a99719e146101f85780636fc4914014610229576100ba565b366100ba576100b8610366565b005b6100b8610366565b3480156100ce57600080fd5b506100b8600480360360208110156100e557600080fd5b81019060208101813564010000000081111561010057600080fd5b82018360208201111561011257600080fd5b8035906020019184600183028401116401000000008311171561013457600080fd5b509092509050610397565b34801561014b57600080fd5b506101546103cc565b60408051918252519081900360200190f35b34801561017257600080fd5b506100b86104fe565b34801561018757600080fd5b506100b86004803603602081101561019e57600080fd5b8101906020810181356401000000008111156101b957600080fd5b8201836020820111156101cb57600080fd5b803590602001918460018302840111640100000000831117156101ed57600080fd5b50909250905061061a565b34801561020457600080fd5b5061020d61064f565b604080516001600160a01b039092168252519081900360200190f35b34801561023557600080fd5b506100b86004803603604081101561024c57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561027757600080fd5b82018360208201111561028957600080fd5b803590602001918460018302840111640100000000831117156102ab57600080fd5b509092509050610674565b3480156102c257600080fd5b506100b86107d4565b3480156102d757600080fd5b506100b86108ed565b3480156102ec57600080fd5b506102f5610a06565b604080519115158252519081900360200190f35b34801561031557600080fd5b506100b8610b1a565b34801561032a57600080fd5b506100b86004803603602081101561034157600080fd5b50356001600160a01b0316610c33565b34801561035d57600080fd5b5061020d610c85565b6000610370610c85565b905060405136600082376000803683855af43d806000843e818015610393578184f35b8184fd5b6040805162461bcd60e51b8152602060048201526005602482015264757067313160d81b604482015290519081900360640190fd5b60008060006103d9610c85565b60408051600481526024810182526020810180516001600160e01b0316630a8c5d3d60e21b178152915181516001600160a01b039490941693919290918291908083835b6020831061043c5780518252601f19909201916020918201910161041d565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461049c576040519150601f19603f3d011682016040523d82523d6000602084013e6104a1565b606091505b5091509150816104e0576040805162461bcd60e51b8152602060048201526005602482015264756e70313160d81b604482015290519081900360640190fd5b8080602001905160208110156104f557600080fd5b50519250505090565b61050733610caa565b6000610511610c85565b60408051600481526024810182526020810180516001600160e01b0316633b154b7360e01b178152915181516001600160a01b039490941693919290918291908083835b602083106105745780518252601f199092019160209182019101610555565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146105d4576040519150601f19603f3d011682016040523d82523d6000602084013e6105d9565b606091505b5050905080610617576040805162461bcd60e51b81526020600482015260056024820152646e7073313160d81b604482015290519081900360640190fd5b50565b6040805162461bcd60e51b8152602060048201526005602482015264696e69313160d81b604482015290519081900360640190fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b61067d33610caa565b61068683610cfc565b6000610690610c85565b6001600160a01b031683836040516024018080602001828103825284848281815260200192508082843760008382015260408051601f909201601f1990811690940182810390940182529283526020810180516001600160e01b0316632539464560e01b17815292518151919750955085945091925081905083835b6020831061072b5780518252601f19909201916020918201910161070c565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461078b576040519150601f19603f3d011682016040523d82523d6000602084013e610790565b606091505b50509050806107ce576040805162461bcd60e51b8152602060048201526005602482015264756675313160d81b604482015290519081900360640190fd5b50505050565b6107dd33610caa565b60006107e7610c85565b60408051600481526024810182526020810180516001600160e01b031663078b91e760e41b178152915181516001600160a01b039490941693919290918291908083835b6020831061084a5780518252601f19909201916020918201910161082b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146108aa576040519150601f19603f3d011682016040523d82523d6000602084013e6108af565b606091505b5050905080610617576040805162461bcd60e51b8152602060048201526005602482015264757073313160d81b604482015290519081900360640190fd5b6108f633610caa565b6000610900610c85565b60408051600481526024810182526020810180516001600160e01b031663871b8ff160e01b178152915181516001600160a01b039490941693919290918291908083835b602083106109635780518252601f199092019160209182019101610944565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146109c3576040519150601f19603f3d011682016040523d82523d6000602084013e6109c8565b606091505b5050905080610617576040805162461bcd60e51b8152602060048201526005602482015264707563313160d81b604482015290519081900360640190fd5b6000806000610a13610c85565b60408051600481526024810182526020810180516001600160e01b03166321dcccd360e21b178152915181516001600160a01b039490941693919290918291908083835b60208310610a765780518252601f199092019160209182019101610a57565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610ad6576040519150601f19603f3d011682016040523d82523d6000602084013e610adb565b606091505b5091509150816104e0576040805162461bcd60e51b8152602060048201526005602482015264726675313160d81b604482015290519081900360640190fd5b610b2333610caa565b6000610b2d610c85565b60408051600481526024810182526020810180516001600160e01b0316635934dcd760e11b178152915181516001600160a01b039490941693919290918291908083835b60208310610b905780518252601f199092019160209182019101610b71565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610bf0576040519150601f19603f3d011682016040523d82523d6000602084013e610bf5565b606091505b5050905080610617576040805162461bcd60e51b8152602060048201526005602482015264707566313160d81b604482015290519081900360640190fd5b610c3c33610caa565b6001600160a01b038116610c7c576040805162461bcd60e51b81526020600482015260026024820152610c5960f21b604482015290519081900360640190fd5b61061781610d20565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b610cb261064f565b6001600160a01b0316816001600160a01b031614610617576040805162461bcd60e51b8152602060048201526002602482015261316360f01b604482015290519081900360640190fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035556fea2646970667358221220e0cc5bfd8d48c19d6b3d0949a869eb3b76b4765144091b4cf0c0a1dc5623225964736f6c63430007060033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc";
