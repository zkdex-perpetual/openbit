/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface StorageInterface extends ethers.utils.Interface {
  functions: {
    "authFacts(address,uint32)": FunctionFragment;
    "exodusMode()": FunctionFragment;
    "firstPriorityRequestId()": FunctionFragment;
    "pendingWithdrawTotal(uint16)": FunctionFragment;
    "storedBlockHashes(uint32)": FunctionFragment;
    "totalBlocksCommitted()": FunctionFragment;
    "totalBlocksExecuted()": FunctionFragment;
    "totalBlocksProven()": FunctionFragment;
    "totalOpenPriorityRequests()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "authFacts",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "exodusMode",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "firstPriorityRequestId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pendingWithdrawTotal",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "storedBlockHashes",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalBlocksCommitted",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalBlocksExecuted",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalBlocksProven",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalOpenPriorityRequests",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "authFacts", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "exodusMode", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "firstPriorityRequestId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pendingWithdrawTotal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "storedBlockHashes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalBlocksCommitted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalBlocksExecuted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalBlocksProven",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalOpenPriorityRequests",
    data: BytesLike
  ): Result;

  events: {};
}

export class Storage extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: StorageInterface;

  functions: {
    authFacts(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "authFacts(address,uint32)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    exodusMode(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "exodusMode()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    firstPriorityRequestId(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "firstPriorityRequestId()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    pendingWithdrawTotal(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "pendingWithdrawTotal(uint16)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    storedBlockHashes(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "storedBlockHashes(uint32)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    totalBlocksCommitted(overrides?: CallOverrides): Promise<{
      0: number;
    }>;

    "totalBlocksCommitted()"(overrides?: CallOverrides): Promise<{
      0: number;
    }>;

    totalBlocksExecuted(overrides?: CallOverrides): Promise<{
      0: number;
    }>;

    "totalBlocksExecuted()"(overrides?: CallOverrides): Promise<{
      0: number;
    }>;

    totalBlocksProven(overrides?: CallOverrides): Promise<{
      0: number;
    }>;

    "totalBlocksProven()"(overrides?: CallOverrides): Promise<{
      0: number;
    }>;

    totalOpenPriorityRequests(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "totalOpenPriorityRequests()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;
  };

  authFacts(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "authFacts(address,uint32)"(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  exodusMode(overrides?: CallOverrides): Promise<boolean>;

  "exodusMode()"(overrides?: CallOverrides): Promise<boolean>;

  firstPriorityRequestId(overrides?: CallOverrides): Promise<BigNumber>;

  "firstPriorityRequestId()"(overrides?: CallOverrides): Promise<BigNumber>;

  pendingWithdrawTotal(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "pendingWithdrawTotal(uint16)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  storedBlockHashes(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "storedBlockHashes(uint32)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  totalBlocksCommitted(overrides?: CallOverrides): Promise<number>;

  "totalBlocksCommitted()"(overrides?: CallOverrides): Promise<number>;

  totalBlocksExecuted(overrides?: CallOverrides): Promise<number>;

  "totalBlocksExecuted()"(overrides?: CallOverrides): Promise<number>;

  totalBlocksProven(overrides?: CallOverrides): Promise<number>;

  "totalBlocksProven()"(overrides?: CallOverrides): Promise<number>;

  totalOpenPriorityRequests(overrides?: CallOverrides): Promise<BigNumber>;

  "totalOpenPriorityRequests()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    authFacts(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "authFacts(address,uint32)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    exodusMode(overrides?: CallOverrides): Promise<boolean>;

    "exodusMode()"(overrides?: CallOverrides): Promise<boolean>;

    firstPriorityRequestId(overrides?: CallOverrides): Promise<BigNumber>;

    "firstPriorityRequestId()"(overrides?: CallOverrides): Promise<BigNumber>;

    pendingWithdrawTotal(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pendingWithdrawTotal(uint16)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    storedBlockHashes(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "storedBlockHashes(uint32)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    totalBlocksCommitted(overrides?: CallOverrides): Promise<number>;

    "totalBlocksCommitted()"(overrides?: CallOverrides): Promise<number>;

    totalBlocksExecuted(overrides?: CallOverrides): Promise<number>;

    "totalBlocksExecuted()"(overrides?: CallOverrides): Promise<number>;

    totalBlocksProven(overrides?: CallOverrides): Promise<number>;

    "totalBlocksProven()"(overrides?: CallOverrides): Promise<number>;

    totalOpenPriorityRequests(overrides?: CallOverrides): Promise<BigNumber>;

    "totalOpenPriorityRequests()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    authFacts(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "authFacts(address,uint32)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    exodusMode(overrides?: CallOverrides): Promise<BigNumber>;

    "exodusMode()"(overrides?: CallOverrides): Promise<BigNumber>;

    firstPriorityRequestId(overrides?: CallOverrides): Promise<BigNumber>;

    "firstPriorityRequestId()"(overrides?: CallOverrides): Promise<BigNumber>;

    pendingWithdrawTotal(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pendingWithdrawTotal(uint16)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    storedBlockHashes(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "storedBlockHashes(uint32)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    totalBlocksCommitted(overrides?: CallOverrides): Promise<BigNumber>;

    "totalBlocksCommitted()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalBlocksExecuted(overrides?: CallOverrides): Promise<BigNumber>;

    "totalBlocksExecuted()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalBlocksProven(overrides?: CallOverrides): Promise<BigNumber>;

    "totalBlocksProven()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalOpenPriorityRequests(overrides?: CallOverrides): Promise<BigNumber>;

    "totalOpenPriorityRequests()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    authFacts(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "authFacts(address,uint32)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    exodusMode(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "exodusMode()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    firstPriorityRequestId(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "firstPriorityRequestId()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pendingWithdrawTotal(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "pendingWithdrawTotal(uint16)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    storedBlockHashes(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "storedBlockHashes(uint32)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalBlocksCommitted(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "totalBlocksCommitted()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalBlocksExecuted(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "totalBlocksExecuted()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalBlocksProven(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalBlocksProven()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalOpenPriorityRequests(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "totalOpenPriorityRequests()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
