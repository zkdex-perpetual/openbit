/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface DummyUpgradeGatekeeperInterface extends ethers.utils.Interface {
  functions: {
    "nextTargets(uint256)": FunctionFragment;
    "setNextTargets(address[])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "nextTargets",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setNextTargets",
    values: [string[]]
  ): string;

  decodeFunctionResult(
    functionFragment: "nextTargets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setNextTargets",
    data: BytesLike
  ): Result;

  events: {};
}

export class DummyUpgradeGatekeeper extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: DummyUpgradeGatekeeperInterface;

  functions: {
    nextTargets(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "nextTargets(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    setNextTargets(
      _targets: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setNextTargets(address[])"(
      _targets: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  nextTargets(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "nextTargets(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  setNextTargets(
    _targets: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setNextTargets(address[])"(
    _targets: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    nextTargets(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "nextTargets(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    setNextTargets(
      _targets: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "setNextTargets(address[])"(
      _targets: string[],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    nextTargets(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "nextTargets(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setNextTargets(
      _targets: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setNextTargets(address[])"(
      _targets: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    nextTargets(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "nextTargets(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setNextTargets(
      _targets: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setNextTargets(address[])"(
      _targets: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
