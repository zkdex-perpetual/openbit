/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { RegenesisMultisig } from "./RegenesisMultisig";

export class RegenesisMultisigFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    threshold: BigNumberish,
    overrides?: Overrides
  ): Promise<RegenesisMultisig> {
    return super.deploy(
      threshold,
      overrides || {}
    ) as Promise<RegenesisMultisig>;
  }
  getDeployTransaction(
    threshold: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(threshold, overrides || {});
  }
  attach(address: string): RegenesisMultisig {
    return super.attach(address) as RegenesisMultisig;
  }
  connect(signer: Signer): RegenesisMultisigFactory {
    return super.connect(signer) as RegenesisMultisigFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RegenesisMultisig {
    return new Contract(address, _abi, signerOrProvider) as RegenesisMultisig;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldRootHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newRootHash",
        type: "bytes32",
      },
    ],
    name: "CandidateAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentApproval",
        type: "uint256",
      },
    ],
    name: "CandidateApproval",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRootHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRootHash",
        type: "bytes32",
      },
    ],
    name: "approveHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "candidateNewRootHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "candidateOldRootHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaster",
    outputs: [
      {
        internalType: "address",
        name: "master",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newRootHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oldRootHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRootHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRootHash",
        type: "bytes32",
      },
    ],
    name: "submitHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newMaster",
        type: "address",
      },
    ],
    name: "transferMastership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105d33803806105d383398101604081905261002f91610066565b3361003981610042565b5060065561007e565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b600060208284031215610077578081fd5b5051919050565b6105468061008d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c3f596871161005b578063c3f59687146100e8578063e8ddbb1e146100fb578063f02ac85f14610103578063ffae1a691461010b57610088565b806332803c6f1461008d5780633bdf29ea146100ab5780635a99719e146100c057806390571740146100d5575b600080fd5b610095610113565b6040516100a291906104a8565b60405180910390f35b6100be6100b9366004610473565b610119565b005b6100c86102c5565b6040516100a29190610494565b6100be6100e3366004610473565b6102ea565b6100be6100f6366004610445565b610368565b6100956103bd565b6100956103c3565b6100956103c9565b60035481565b60025482146101435760405162461bcd60e51b815260040161013a906104da565b60405180910390fd5b60035481146101645760405162461bcd60e51b815260040161013a906104bf565b604080516060810182527336615cf349d7f6344891b1e7ca7c72883f5dc049815273a61464658afeaf65cccaafd3a512b69a83b7761860208201527342919a31a9dab93cbeab949a0c4f31a9edefa5649181019190915260005b60038110156102bf57338282600381106101d457fe5b60200201516001600160a01b031614156102b75760008181526004602052604090205460ff161561020457600080fd5b60008181526004602052604090819020805460ff19166001908117909155600580549091019081905590517f20c14ab75b68b9ac686db5ba5b3d1e7149ffca33aaed3d239f68605f917a94089161025a916104a8565b60405180910390a160065460055414156102b757600254600081905560035460018190556040517f66091a98ba680110c0c58b967c1ffe1963e2d5079e3eb80656aa1cafeb194049926102ae9290916104b1565b60405180910390a15b6001016101be565b50505050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b6102f26102c5565b6001600160a01b0316336001600160a01b0316146103225760405162461bcd60e51b815260040161013a906104f5565b60028290556003819055600080805560018190555b600381101561035e576000818152600460205260409020805460ff19169055600101610337565b5050600060055550565b610371336103cf565b6001600160a01b0381166103b1576040805162461bcd60e51b81526020600482015260026024820152610c5960f21b604482015290519081900360640190fd5b6103ba81610421565b50565b60015481565b60005481565b60025481565b6103d76102c5565b6001600160a01b0316816001600160a01b0316146103ba576040805162461bcd60e51b8152602060048201526002602482015261316360f01b604482015290519081900360640190fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b600060208284031215610456578081fd5b81356001600160a01b038116811461046c578182fd5b9392505050565b60008060408385031215610485578081fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b90815260200190565b918252602082015260400190565b6020808252600190820152603360f81b604082015260600190565b6020808252600190820152601960f91b604082015260600190565b6020808252600190820152603160f81b60408201526060019056fea2646970667358221220838f4a20d3dbfda8e4063f5abaeb012509288a6fa6c5514d931ef65ddfb6423264736f6c63430007060033";
