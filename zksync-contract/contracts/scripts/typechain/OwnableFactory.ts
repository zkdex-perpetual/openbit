/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Ownable } from "./Ownable";

export class OwnableFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(masterAddress: string, overrides?: Overrides): Promise<Ownable> {
    return super.deploy(masterAddress, overrides || {}) as Promise<Ownable>;
  }
  getDeployTransaction(
    masterAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(masterAddress, overrides || {});
  }
  attach(address: string): Ownable {
    return super.attach(address) as Ownable;
  }
  connect(signer: Signer): OwnableFactory {
    return super.connect(signer) as OwnableFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Ownable {
    return new Contract(address, _abi, signerOrProvider) as Ownable;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "masterAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getMaster",
    outputs: [
      {
        internalType: "address",
        name: "master",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newMaster",
        type: "address",
      },
    ],
    name: "transferMastership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102243803806102248339818101604052602081101561003357600080fd5b505161003e81610044565b50610068565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b6101ad806100776000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635a99719e1461003b578063c3f596871461005f575b600080fd5b610043610087565b604080516001600160a01b039092168252519081900360200190f35b6100856004803603602081101561007557600080fd5b50356001600160a01b03166100ac565b005b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b6100b533610101565b6001600160a01b0381166100f5576040805162461bcd60e51b81526020600482015260026024820152610c5960f21b604482015290519081900360640190fd5b6100fe81610153565b50565b610109610087565b6001600160a01b0316816001600160a01b0316146100fe576040805162461bcd60e51b8152602060048201526002602482015261316360f01b604482015290519081900360640190fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035556fea264697066735822122088c985c35bc2f3a3b87b7179aae0c95952a1d579cd69eb21416b8fc641bb524964736f6c63430007060033";
