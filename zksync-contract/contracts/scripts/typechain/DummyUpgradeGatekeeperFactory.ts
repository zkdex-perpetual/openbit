/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DummyUpgradeGatekeeper } from "./DummyUpgradeGatekeeper";

export class DummyUpgradeGatekeeperFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<DummyUpgradeGatekeeper> {
    return super.deploy(overrides || {}) as Promise<DummyUpgradeGatekeeper>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DummyUpgradeGatekeeper {
    return super.attach(address) as DummyUpgradeGatekeeper;
  }
  connect(signer: Signer): DummyUpgradeGatekeeperFactory {
    return super.connect(signer) as DummyUpgradeGatekeeperFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyUpgradeGatekeeper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DummyUpgradeGatekeeper;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nextTargets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_targets",
        type: "address[]",
      },
    ],
    name: "setNextTargets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101cf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637c474dcf1461003b578063c3d17706146100ad575b600080fd5b6100ab6004803603602081101561005157600080fd5b81019060208101813564010000000081111561006c57600080fd5b82018360208201111561007e57600080fd5b803590602001918460208302840111640100000000831117156100a057600080fd5b5090925090506100e6565b005b6100ca600480360360208110156100c357600080fd5b50356100f7565b604080516001600160a01b039092168252519081900360200190f35b6100f260008383610121565b505050565b6000818154811061010757600080fd5b6000918252602090912001546001600160a01b0316905081565b828054828255906000526020600020908101928215610174579160200282015b828111156101745781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190610141565b50610180929150610184565b5090565b5b80821115610180576000815560010161018556fea26469706673582212208ead036e531703b8a0690a46733b72a21e498ddfb5525146f368ab37cc94ab1464736f6c63430007060033";
